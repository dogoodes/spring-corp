#Mensagem ocorrida devido evento do framework.
#Exemplos : Erros de implementacao.

framework.utils.array.comprimentocom.zero = O comprimento da matriz deve ser superior a 0.
framework.utils.integer.com.campo.invalido = O Valor do Campo {0} deve ser informado apenas com n\u00fameros.
framework.utils.calendar.com.campo.invalido = O Valor do Campo {0} deve ser informado no formato dd/mm/yyyy.
framework.utils.bigdecimal.com.campo.invalido = O Valor do Campo {0} deve ter o formato decimal.
framework.utils.long.com.campo.invalido = O Valor do Campo {0} deve ser informado apenas com n\u00fameros.
framework.utils.required = O campo {0} deve ser informado.
framework.utils.length = O campo {0} deve ter {1} d\u00edgitos.
framework.utils.min = O campo {0} deve ter no m\u00ednimo {1} digitos.
framework.utils.max = O campo {0} deve ter no m\u00e1ximo {1} digitos.
framework.utils.min.and.max = O campo {0} deve ter no m\u00ednimo {1} e no m\u00e1ximo {2} digitos.
framework.utils.lessThan = O campo {0} deve ser menor que {1}.
framework.utils.biggerThan = O campo {0} deve ser maior que {1}.
framework.utils.lessThan.and.biggerThan = O campo {0} deve ser maior que {1} e menor que {2}.
framework.utils.required.array = O campo {0} da linha {1} deve ser informado
framework.utils.integer.com.campo.invalido.array = O Valor do Campo {0} da linha {1} deve ser informado apenas com n\u00fameros.
framework.utils.calendar.com.campo.invalido.array = O Valor do Campo {0} da linha {1} deve ser informado no formato dd/mm/yyyy.
framework.utils.bigdecimal.com.campo.invalido.array = O Valor do Campo {0} da linha {1} deve ter o formato decimal.
framework.utils.long.com.campo.invalido.array = O Valor do Campo {0} da linha {1} deve ser informado apenas com n\u00fameros.
framework.utils.bigdecimal.percentual.maior.cem = O Valor informado não pode ser maior que 100%.
framework.utils.invalid.format = O Valor {0} deve ter o formato {1}
framework.utils.invalid.identification.format = A identifica\u00e7\u00e3o do tipo {0} est\u00e1 inv\u00e1lido.
framework.utils.regexValidation.InscricaoEstadualDestinatario = O Campo Inscricao Estadual do Destinatario aceita vazio, ISENTO, digitos num\u00e9ricos ou PR9999 a PR99999999.
framework.utils.regexValidation.InscricaoEstadualEmitente = O Campo Inscricao Estadual deve ser informado com valores entre 2 e 14 digitos ou como ISENTO.
framework.utils.regexValidation.Suframa = O Campo Suframa aceita 8 ou 9 digitos num\u00e9ricos.
framework.utils.regexValidation.EAN = O Campo EAN aceita apenas 0, 8, 12 ou 14 digitos num\u00e9ricos.
framework.utils.regexValidation.Serie = O Campo S\u00e9rie aceita apenas o n\u00famero 0 ou iniciados em 1.
framework.utils.regexValidation.NomeDestinatario = O Campo Nome/Razão Social não pode conter apenas palavras repetidas ou apenas um nome
framework.utils.regexValidation.EMAIL = O EMAIL informado não possui um formato v\u00e1lido.
framework.utils.regexValidation.TDEC_0302 = O Campo deve ser formado com 5 d\u00edgitos, sendo 3 de corpo e 2 decimais.
framework.utils.regexValidation.TDEC_0302Opc = O Campo deve ser formado com 5 d\u00edgitos, sendo 3 de corpo e 2 decimais.
framework.utils.regexValidation.TDEC_0803 = O Campo deve ser formado com 11 d\u00edgitos, sendo 8 de corpo e 3 decimais.
framework.utils.regexValidation.TDEC_0803Opc = O Campo deve ser formado com 11 d\u00edgitos, sendo 8 de corpo e 3 decimais.
framework.utils.regexValidation.TDEC_0804 = O Campo deve ser formado com 12 d\u00edgitos, sendo 8 de corpo e 4 decimais.
framework.utils.regexValidation.TDEC_0804Opc = O Campo deve ser formado com 12 d\u00edgitos, sendo 8 de corpo e 4 decimais.
framework.utils.regexValidation.TDEC_1104 = O Campo deve ser formado com 15 d\u00edgitos, sendo 11 de corpo e 4 decimais.
framework.utils.regexValidation.TDEC_1104Opc = O Campo deve ser formado com 15 d\u00edgitos, sendo 11 de corpo e 4 decimais.
framework.utils.regexValidation.TDEC_1203 = O Campo deve ser formado com 15 d\u00edgitos, sendo 12 de corpo e 3 decimais.
framework.utils.regexValidation.TDEC_1203Opc = O Campo deve ser formado com 15 d\u00edgitos, sendo 12 de corpo e 3 decimais.
framework.utils.regexValidation.TDEC_1204 = O Campo deve ser formado com 16 d\u00edgitos, sendo 12 de corpo e 4 decimais.
framework.utils.regexValidation.TDEC_1204Opc = O Campo deve ser formado com 16 d\u00edgitos, sendo 12 de corpo e 4 decimais.
framework.utils.regexValidation.TDEC_1302 = O Campo deve ser formado com 15 d\u00edgitos, sendo 13 de corpo e 2 decimais.
framework.utils.regexValidation.TDEC_1302Opc = O Campo deve ser formado com 15 d\u00edgitos, sendo 13 de corpo e 2 decimais.
framework.utils.regexValidation.NCM = Valor do campo NCM inv\u00e1lido
framework.utils.regexValidation.PLACA = O campo deve ter o formato XXX9999
framework.utils.regexValidation.valor.produto.mal.formado = O Valor do Produto {0} deve ser formado com 15 d\u00edgitos, sendo 13 de corpo e 2 decimais. Verifique se os valores da Quantidade ou do Valor Unitario não extrapolaram esse limite.
framework.utils.regexValidation.valor.mal.formado = O Campo {0} do Produto {1} deve ser formato com {2} d\u00edgitos, sendo {3} de corpo e {4} decimais.
framework.jdbcutils.banco.nao.suportado = Banco de dados {0} nao suportado pelo aplica\u00e7\u00e3o.
framework.i18n.language.not.supported = Idioma {0} nao suportada para tradu\u00e7\u00e3o da aplica\u00e7\u00e3o.
metadata.implementation.occurs.not.specified = Classe de Implementa\u00e7\u00e3o das ocorr\u00eancias deve ser informada.
metadata.constructor.not.exist = M\u00e9todo {0} para criar objeto do tipo {1} n\u00e3o existe.
metadata.datamanager.error.set = Erro ao tentar setar valor {0} na propriedade {1}.
metadata.datamanager.error.get = Erro ao tentar recuperar o valor da propriedade {0}.
foreign.key.not.found = A a\u00e7\u00e3o n\u00e3o pode ser conclu\u00ed­da pois o dado j\u00e1 est\u00e1 sendo usado.